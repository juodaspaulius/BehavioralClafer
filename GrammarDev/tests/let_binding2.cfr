A {
  B ?
    param : int
  C ?
    param : int
  param : int
  D ?
    
  // Behavioral constraints
  
  [ G (let x : A.param  y : B.param | A.D => X(A.param <= x + 10) && F(B.param = y+2) ) ]
  
  //[ G (let x = A.param | (A.param <= x + 10) ++ B.param) ]
  
  
  //[ F (A.param = 5) ]
}
