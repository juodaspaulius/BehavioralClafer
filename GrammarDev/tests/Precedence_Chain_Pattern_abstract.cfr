<<max A>>
A {
  <<max B>>
  B ? {}
  `E 5 {
    Y
    [E]
  }
  C ?
  D ?
  V -> integer
  
  // Structural constraint
  [ no B ]
  [#C>=5]
  [#A > 10 && #A< 5]
  
  // Behavioural constraint
  //Precedence Chain Pattern
  
  [ #A > 1 && C precedes some B && lone D && E.Y]
  /*for B,C below we have (ESetExp (UnionCom (ClaferId (Path [ModIdIdent (PosIdent ((61,19),"B"))])) (ClaferId (Path [ModIdIdent (PosIdent ((61,21),"C"))])))) (TmpScopeBefore (ScopeParam (QuantExp QuantLone (ESetExp (ClaferId (Path [ModIdIdent (PosIdent ((61,35),"D"))]*/
  
  [ A precedes B,C]
  [ A precedes B,C globally]
  [ A precedes B,D before C ]
  [ A precedes B,C after D]
  
  //here I need to change
  
  [ B precedes A,C between C and D]
  [ A precedes B between C and D]
  [ some A precedes one B]
  [ some A precedes lone B globally]
  [ lone A precedes some B before lone C ]
  [ #A=5 precedes #B=3 after (max sum D)]
  [ one A precedes B between (if (#C>=5) then E.Y else D) and (all disj a:D | #a>2 )]
  [ A precedes B between (C) and (D)]
  [ some A precedes some B between C and D]
  

}
